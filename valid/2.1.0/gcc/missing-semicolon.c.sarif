{"$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json",
 "version": "2.1.0",
 "runs": [{"tool": {"driver": {"name": "GNU C23",
                               "fullName": "GNU C23 (GCC) version 15.0.1 20250217 (experimental) (x86_64-pc-linux-gnu)",
                               "version": "15.0.1 20250217 (experimental)",
                               "informationUri": "https://gcc.gnu.org/gcc-15/",
                               "rules": []}},
           "invocations": [{"arguments": ["/home/david/coding/work/build/gcc/cc1",
                                          "-quiet",
                                          "-iprefix",
                                          "/home/david/coding/work/install/lib/gcc/x86_64-pc-linux-gnu/15.0.1/",
                                          "-isystem",
                                          "/home/david/coding/work/build/gcc/include",
                                          "-isystem",
                                          "/home/david/coding/work/build/gcc/include-fixed",
                                          "/home/david/coding/work/src/gcc/testsuite/gcc.dg/sarif-output/missing-semicolon.c",
                                          "-quiet",
                                          "-dumpbase",
                                          "missing-semicolon.c",
                                          "-dumpbase-ext",
                                          ".c",
                                          "-mtune=generic",
                                          "-march=x86-64",
                                          "-fdiagnostics-color=never",
                                          "-fdiagnostics-urls=never",
                                          "-fno-diagnostics-show-caret",
                                          "-fno-diagnostics-show-line-numbers",
                                          "-fdiagnostics-path-format=separate-events",
                                          "-fdiagnostics-text-art-charset=none",
                                          "-fno-diagnostics-show-event-links",
                                          "-fdiagnostics-format=sarif-file",
                                          "-o",
                                          "missing-semicolon.s"],
                            "workingDirectory": {"uri": "/home/david/coding/work/build/gcc/testsuite/gcc"},
                            "startTimeUtc": "2025-02-18T18:24:14Z",
                            "executionSuccessful": false,
                            "toolExecutionNotifications": [],
                            "endTimeUtc": "2025-02-18T18:24:14Z"}],
           "artifacts": [{"location": {"uri": "/home/david/coding/work/src/gcc/testsuite/gcc.dg/sarif-output/missing-semicolon.c"},
                          "sourceLanguage": "c",
                          "contents": {"text": "/* { dg-do compile } */\n/* { dg-options \"-fdiagnostics-format=sarif-file\" } */\n\n/* Verify that SARIF output can capture secondary locations\n   relating to a diagnostic.  */\n\nint missing_semicolon (void)\n{\n  return 42\n}\n\n/* We expect a failing compile due to the error, but the use of \n   -fdiagnostics-format=sarif-file means there should be no output to stderr.\n   DejaGnu injects this message; ignore it:\n   { dg-prune-output \"exit status is 1\" } */\n\n/* Verify that some JSON was written to a file with the expected name:\n   { dg-final { verify-sarif-file } } */\n\n/* Use a Python script to verify various properties about the generated\n   .sarif file:\n   { dg-final { run-sarif-pytest missing-semicolon.c \"missing-semicolon.py\" } } */\n"},
                          "roles": ["analysisTarget"]}],
           "results": [{"ruleId": "error",
                        "level": "error",
                        "message": {"text": "expected ';' before '}}' token"},
                        "locations": [{"physicalLocation": {"artifactLocation": {"uri": "/home/david/coding/work/src/gcc/testsuite/gcc.dg/sarif-output/missing-semicolon.c"},
                                                            "region": {"startLine": 9,
                                                                       "startColumn": 12,
                                                                       "endColumn": 13},
                                                            "contextRegion": {"startLine": 9,
                                                                              "snippet": {"text": "  return 42\n"}}},
                                       "logicalLocations": [{"name": "missing_semicolon",
                                                             "fullyQualifiedName": "missing_semicolon",
                                                             "decoratedName": "missing_semicolon",
                                                             "kind": "function"}],
                                       "relationships": [{"target": 0,
                                                          "kinds": ["relevant"]}]}],
                        "fixes": [{"artifactChanges": [{"artifactLocation": {"uri": "/home/david/coding/work/src/gcc/testsuite/gcc.dg/sarif-output/missing-semicolon.c"},
                                                        "replacements": [{"deletedRegion": {"startLine": 9,
                                                                                            "startColumn": 12,
                                                                                            "endColumn": 12},
                                                                          "insertedContent": {"text": ";"}}]}]}],
                        "relatedLocations": [{"physicalLocation": {"artifactLocation": {"uri": "/home/david/coding/work/src/gcc/testsuite/gcc.dg/sarif-output/missing-semicolon.c"},
                                                                   "region": {"startLine": 10,
                                                                              "startColumn": 1,
                                                                              "endColumn": 2},
                                                                   "contextRegion": {"startLine": 10,
                                                                                     "snippet": {"text": "}\n"}}},
                                              "id": 0}]}]}]}
