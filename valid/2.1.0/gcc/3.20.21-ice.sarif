{"$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json",
 "version": "2.1.0",
 "runs": [{"tool": {"driver": {"name": "GNU C23",
                               "fullName": "GNU C23 (GCC) version 15.0.1 20250217 (experimental) (x86_64-pc-linux-gnu)",
                               "version": "15.0.1 20250217 (experimental)",
                               "informationUri": "https://gcc.gnu.org/gcc-15/",
                               "rules": []},
                    "extensions": [{"name": "crash_test_plugin",
                                    "fullName": "./crash_test_plugin.so"}]},
           "invocations": [{"arguments": ["/home/david/coding/work/build/gcc/cc1",
                                          "-quiet",
                                          "-iprefix",
                                          "/home/david/coding/work/install/lib/gcc/x86_64-pc-linux-gnu/15.0.1/",
                                          "-isystem",
                                          "/home/david/coding/work/build/gcc/include",
                                          "-isystem",
                                          "/home/david/coding/work/build/gcc/include-fixed",
                                          "-iplugindir=/home/david/coding/work/build/gcc/plugin",
                                          "/home/david/coding/work/src/gcc/testsuite/gcc.dg/plugin/crash-test-ice-sarif.c",
                                          "-iplugindir=/home/david/coding/work/build/gcc/plugin",
                                          "-quiet",
                                          "-dumpbase",
                                          "crash-test-ice-sarif.c",
                                          "-dumpbase-ext",
                                          ".c",
                                          "-mtune=generic",
                                          "-march=x86-64",
                                          "-fdiagnostics-color=never",
                                          "-fdiagnostics-urls=never",
                                          "-fno-diagnostics-show-caret",
                                          "-fno-diagnostics-show-line-numbers",
                                          "-fdiagnostics-path-format=separate-events",
                                          "-fdiagnostics-text-art-charset=none",
                                          "-fno-diagnostics-show-event-links",
                                          "-fplugin=./crash_test_plugin.so",
                                          "-fdiagnostics-format=sarif-file",
                                          "-fno-report-bug",
                                          "-o",
                                          "crash-test-ice-sarif.s"],
                            "workingDirectory": {"uri": "/home/david/coding/work/build/gcc/testsuite/gcc"},
                            "startTimeUtc": "2025-02-18T00:43:08Z",
                            "executionSuccessful": false,
                            "toolExecutionNotifications": [{"locations": [{"physicalLocation": {"artifactLocation": {"uri": "/home/david/coding/work/src/gcc/testsuite/gcc.dg/plugin/crash-test-ice-sarif.c"},
                                                                                                "region": {"startLine": 9,
                                                                                                           "startColumn": 3,
                                                                                                           "endColumn": 16},
                                                                                                "contextRegion": {"startLine": 9,
                                                                                                                  "snippet": {"text": "  inject_ice (); /* { dg-ice \"\" } */\n"}}},
                                                                           "logicalLocations": [{"name": "test_inject_ice",
                                                                                                 "fullyQualifiedName": "test_inject_ice",
                                                                                                 "decoratedName": "test_inject_ice",
                                                                                                 "kind": "function"}]}],
                                                            "message": {"text": "I'm sorry Dave, I'm afraid I can't do that"},
                                                            "level": "error",
                                                            "properties": {"gcc/backtrace": {"frames": [{"pc": "0x7f2ca0d52362",
                                                                                                         "function": "pass_crash_test::execute(function*)",
                                                                                                         "filename": "/home/david/coding/work/src/gcc/testsuite/gcc.dg/plugin/crash_test_plugin.cc",
                                                                                                         "lineno": 98}]}}}],
                            "endTimeUtc": "2025-02-18T00:43:08Z"}],
           "artifacts": [{"location": {"uri": "/home/david/coding/work/src/gcc/testsuite/gcc.dg/plugin/crash-test-ice-sarif.c"},
                          "sourceLanguage": "c",
                          "contents": {"text": "/* { dg-do compile } */\n/* { dg-options \"-fdiagnostics-format=sarif-file\" } */\n/* { dg-additional-options \"-fno-report-bug\" } */\n\nextern void inject_ice (void);\n\nvoid test_inject_ice (void)\n{\n  inject_ice (); /* { dg-ice \"\" } */\n  /* { dg-regexp \"during GIMPLE pass: crash_test\" } */\n}\n\n/* Verify that some JSON was written to a file with the expected name.  */\n/* { dg-final { verify-sarif-file } } */\n\n/* We expect various properties.\n   The indentation here reflects the expected hierarchy, though these tests\n   don't check for that, merely the string fragments we expect.\n\n   { dg-final { scan-sarif-file \"\\\"version\\\": \\\"2.1.0\\\"\" } }\n   { dg-final { scan-sarif-file \"\\\"runs\\\": \\\\\\[\" } }\n     { dg-final { scan-sarif-file \"\\\"artifacts\\\": \\\\\\[\" } } \n       { dg-final { scan-sarif-file \"\\\"location\\\": \" } }\n         { dg-final { scan-sarif-file \"\\\"uri\\\": \" } }\n\n       { dg-final { scan-sarif-file \"\\\"sourceLanguage\\\": \\\"c\\\"\" { target c } } }\n       { dg-final { scan-sarif-file \"\\\"sourceLanguage\\\": \\\"cplusplus\\\"\" { target c++ } } }\n\n       { dg-final { scan-sarif-file \"\\\"contents\\\": \" } }\n         { dg-final { scan-sarif-file \"\\\"text\\\": \" } }\n     { dg-final { scan-sarif-file \"\\\"tool\\\": \" } }\n       { dg-final { scan-sarif-file \"\\\"driver\\\": \" } }\n         { dg-final { scan-sarif-file \"\\\"name\\\": \\\"GNU C\" } }\n         { dg-final { scan-sarif-file \"\\\"fullName\\\": \\\"GNU C\" } }\n         { dg-final { scan-sarif-file \"\\\"informationUri\\\": \\\"\" } }\n       { dg-final { scan-sarif-file \"\\\"extensions\\\": \\\\\\[\" } }\n         { dg-final { scan-sarif-file \"\\\"name\\\": \\\"crash_test_plugin\\\"\" } }\n\n     We expect no results:\n     { dg-final { scan-sarif-file \"\\\"results\\\": \\\\\\[\\\\\\]\" } }\n\n     but instead should have an invocations array...\n\n     { dg-final { scan-sarif-file \"\\\"invocations\\\": \\\\\\[\" } }\n\n     ...containing this:\n       { dg-final { scan-sarif-file \"\\\"executionSuccessful\\\": false\" } }\n       { dg-final { scan-sarif-file \"\\\"toolExecutionNotifications\\\": \\\\\\[\" } }\n\n       ...containing this notification:\n         { dg-final { scan-sarif-file \"\\\"level\\\": \\\"error\\\"\" } }\n         { dg-final { scan-sarif-file \"\\\"locations\\\": \\\\\\[\" } }\n           { dg-final { scan-sarif-file \"\\\"logicalLocations\\\": \\\\\\[\" } }\n             { dg-final { scan-sarif-file \"\\\"kind\\\": \\\"function\\\"\" } }\n             { dg-final { scan-sarif-file \"\\\"name\\\": \\\"test_inject_ice\\\"\" } }\n           { dg-final { scan-sarif-file \"\\\"physicalLocation\\\": \" } }\n             { dg-final { scan-sarif-file \"\\\"contextRegion\\\": \" } }\n             { dg-final { scan-sarif-file \"\\\"artifactLocation\\\": \" } }\n             { dg-final { scan-sarif-file \"\\\"region\\\": \" } }\n               { dg-final { scan-sarif-file \"\\\"startLine\\\": 9\" } }\n               { dg-final { scan-sarif-file \"\\\"startColumn\\\": 3\" } }\n               { dg-final { scan-sarif-file \"\\\"endColumn\\\": 16\" } }\n         { dg-final { scan-sarif-file \"\\\"message\\\": \" } }\n           { dg-final { scan-sarif-file \"\\\"text\\\": \\\"I'm sorry Dave, I'm afraid I can't do that\\\"\" } } */\n"},
                          "roles": ["analysisTarget"]}],
           "results": []}]}
